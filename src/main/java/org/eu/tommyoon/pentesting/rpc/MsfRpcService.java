package org.eu.tommyoon.pentesting.rpc;

import org.eu.tommyoon.pentesting.Config;
import org.eu.tommyoon.pentesting.rpc.model.RpcServer;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import lombok.Data;

@Data
@Service
public class MsfRpcService {
	@Autowired
	Config config;
	
	private RpcServer rpcServer;
	private String selectedVulnerability;

	public RpcConnection getConnection() throws RpcException {
		if (rpcServer == null || rpcServer.getRpcConnection() == null) {
			System.out.println("Connecting to MSFRPC service ...");
			connectToMSFRPC();
		}
		
		if (rpcServer == null || rpcServer.getRpcConnection() == null) {
			System.out.println("Couldn't connect to MSFRPC service ...");
			return null;
		}
		RpcConnection connection = rpcServer.getRpcConnection();
		
		return connection;
	}
	
	private void connectToMSFRPC() throws RpcException {
		// Create a server which holds IP, usernamd and password
		RpcServer rpcServer = new RpcServer(config.msfName, config.msfSsl, config.msfHost, config.msfUsername, config.msfPassword, config.msfPort);
		
		// Create RPC Connection object
		RpcConnection connection = new RpcConnection();
		
		// Link RpcServer and RpcConnection
		rpcServer.setRpcConnection(connection);
		
		// actual connection is made
		connection.connect(rpcServer);
		
		this.rpcServer = rpcServer;
		System.out.println("Connected to MSFRPC service");
	}
}
