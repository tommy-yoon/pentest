package org.eu.tommyoon.pentesting;

import java.io.IOException;
import java.net.InetSocketAddress;
import java.net.Socket;
import java.util.ArrayList;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.boot.CommandLineRunner;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;

@SpringBootApplication
public class Pentest implements CommandLineRunner {
	
	private static Logger LOG = LoggerFactory.getLogger(Pentest.class);

	public static void main(String[] args) {
		SpringApplication.run(Pentest.class, args);
	}

	@Override
	public void run(String... args) throws Exception {
		if (args.length<1) {
			System.out.println("Usage : <ipaddress> or <ipaddress>/<CIDR>");
			System.out.println("Example : 192.168.137.2/24");
			return;
		}
//		LOG.info("EXECUTING : command line runner");
//		 
//        for (int i = 0; i < args.length; ++i) {
//            LOG.info("args[{}]: {}", i, args[i]);
//        }
//		Machine machine = new Machine();
//		machine.setIp("127.0.0.1");
//		boolean result = isPortOpen("127.0.0.1", 445, 20);
//		System.out.println("result : " + result);
//		ArrayList<String> addresses = calculateAddresses(ipAddress, cidr);
//
//		for (String address : addresses) {
//			System.out.println(address);
//		}
	}
	
	private boolean isPortOpen(String ip, int port, int timeout) {
		try {
			Socket socket = new Socket();
			socket.connect(new InetSocketAddress(ip, port), timeout);
			socket.close();
			return true;
		} catch (IOException e) {
			return false;
		}
	}

}
